# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do

  desc "setup CI"
  lane :setting_continious_integration do
    setup_ci
  end

  desc "Configure match"
  lane :configure_match do
    api_key = app_store_connect_api_key(
      key_id: ENV['APPLE_KEY_ID'], # from table 1.0
      issuer_id: ENV['APPLE_ISSUER_ID'],  # from table 1.0
      key_filepath: ENV['APPLE_KEY_PATH'],  # from table 1.0
      in_house: false
    )
    
    match(
      type: "appstore", # use development | appstore | ad-hoc
      app_identifier: 'in.nitinvarda.todo',
      verbose: true,
      readonly: true,
      api_key: api_key
    )
    # sh("security set-key-partition-list -S apple-tool:,apple: -s -k #{ENV['MATCH_KEYCHAIN_PASSWORD']} ~/Library/Keychains/#{ENV['MATCH_KEYCHAIN_NAME']}")
  end

  

  desc "increment build number"
  lane :inc_build_number  do
    increment_build_number(xcodeproj: "todo.xcodeproj")
  end

  

  desc "Build project"
  lane :build_project do
    sh("security find-identity -v -p codesigning")
    sh("ls -la ~/Library/MobileDevice/Provisioning\\ Profiles")
    start_time = Time.now
    UI.message("⌛️ Starting build...")  
    build_app(
      scheme: "todo",
      workspace: "todo.xcworkspace",
      configuration: "Release",
      export_method: "app-store",
      verbose: true,
      silent: false,
      export_options: {
        provisioningProfiles: {
          "in.nitinvarda.todo" => "match AppStore in.nitinvarda.todo"  # ✅ match this exactly
        },
        export_method: "app-store",
        team_id: 'YB7RTTYCHC',
      }
    )
    UI.message("✅ Build finished in #{(Time.now - start_time).round}s")
  end

  desc "upload to testflight"
  lane :upld_to_testflight do 
    upload_to_testflight(
      skip_waiting_for_build_processing: true,
      api_key: api_key,
      changelog: "New Build"
    )
  end

end
